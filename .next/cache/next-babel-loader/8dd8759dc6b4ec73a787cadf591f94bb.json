{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"E:\\\\kda\\\\test_next\\\\pages\\\\contacts\\\\[id]\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nexport default function Index(props) {\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, props.id), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Nom : \", props.lname), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"Prenom : \", props.fname));\n}\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var id, reponse, contact;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.params.id;\n            _context.next = 3;\n            return fetch(\"http://localhost:3000/api/contacts/\".concat(id));\n\n          case 3:\n            reponse = _context.sent;\n            _context.next = 6;\n            return reponse.json();\n\n          case 6:\n            contact = _context.sent;\n            console.log(contact);\n            return _context.abrupt(\"return\", {\n              contact: contact\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["E:/kda/test_next/pages/contacts/[id]/index.js"],"names":["React","fetch","Index","props","id","lname","fname","getInitialProps","context","params","reponse","json","contact","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,EAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUD,KAAK,CAACE,KAAhB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaF,KAAK,CAACG,KAAnB,CAHF,CADF;AAOD;KARuBJ,K;;AAUxBA,KAAK,CAACK,eAAN;AAAA,sEAAwB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdJ,YAAAA,EADc,GACPI,OAAO,CAACC,MADD,CACdL,EADc;AAAA;AAAA,mBAEAH,KAAK,8CAAuCG,EAAvC,EAFL;;AAAA;AAEhBM,YAAAA,OAFgB;AAAA;AAAA,mBAGAA,OAAO,CAACC,IAAR,EAHA;;AAAA;AAGhBC,YAAAA,OAHgB;AAItBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAJsB,6CAKf;AACLA,cAAAA,OAAO,EAAPA;AADK,aALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nexport default function Index(props) {\r\n  return (\r\n    <>\r\n      <h1>{props.id}</h1>\r\n      <p>Nom : {props.lname}</p>\r\n      <p>Prenom : {props.fname}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nIndex.getInitialProps = async (context) => {\r\n  const { id } = context.params;\r\n  const reponse = await fetch(`http://localhost:3000/api/contacts/${id}`);\r\n  const contact = await reponse.json();\r\n  console.log(contact);\r\n  return {\r\n    contact,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}