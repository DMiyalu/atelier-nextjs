{"ast":null,"code":"var _jsxFileName = \"E:\\\\kda\\\\test_next\\\\pages\\\\contacts\\\\[id]\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nexport default function Index(props) {\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, props.fname), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, \"ID : \", props.id, \" \")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Nom : \", props.lname, \" \")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Pr\\xE9nom : \", props.fname, \" \")));\n}\n\nIndex.getInitialProps = async context => {\n  const {\n    id\n  } = context.query;\n  const reponse = await fetch(`http://localhost:3000/api/contacts/${id}`);\n  const contact = await reponse.json();\n  console.log(contact);\n  return {\n    contact\n  };\n};","map":{"version":3,"sources":["E:/kda/test_next/pages/contacts/[id]/index.js"],"names":["React","fetch","Index","props","fname","id","lname","getInitialProps","context","query","reponse","contact","json","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAASD,KAAK,CAACE,EAAf,MADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUF,KAAK,CAACG,KAAhB,MADF,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAaH,KAAK,CAACC,KAAnB,MADF,CARF,CADF;AAcD;;AAEDF,KAAK,CAACK,eAAN,GAAwB,MAAOC,OAAP,IAAmB;AACzC,QAAM;AAAEH,IAAAA;AAAF,MAASG,OAAO,CAACC,KAAvB;AACA,QAAMC,OAAO,GAAG,MAAMT,KAAK,CAAE,sCAAqCI,EAAG,EAA1C,CAA3B;AACA,QAAMM,OAAO,GAAG,MAAMD,OAAO,CAACE,IAAR,EAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CARD","sourcesContent":["import React from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nexport default function Index(props) {\r\n  return (\r\n    <>\r\n      <h1>{props.fname}</h1>\r\n      <p>\r\n        <b>ID : {props.id} </b>\r\n      </p>\r\n      <p>\r\n        <b>Nom : {props.lname} </b>\r\n      </p>\r\n      <p>\r\n        <b>Pr√©nom : {props.fname} </b>\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n\r\nIndex.getInitialProps = async (context) => {\r\n  const { id } = context.query;\r\n  const reponse = await fetch(`http://localhost:3000/api/contacts/${id}`);\r\n  const contact = await reponse.json();\r\n  console.log(contact);\r\n  return {\r\n    contact,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}