{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"E:\\\\kda\\\\test_next\\\\pages\\\\contacts\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nexport default function Index(props) {\n  var _this = this;\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"Liste des contacts\"), props.contacts.map(function (_ref) {\n    var id = _ref.id,\n        fname = _ref.fname,\n        lname = _ref.lname;\n    return __jsx(\"p\", {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, fname + ' ' + lname);\n  }));\n}\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var reponse, contacts;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('/api/contacts');\n\n        case 2:\n          reponse = _context.sent;\n          _context.next = 5;\n          return reponse.json();\n\n        case 5:\n          contacts = _context.sent;\n          console.log(contacts);\n          return _context.abrupt(\"return\", {\n            contacts: contacts\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["E:/kda/test_next/pages/contacts/index.js"],"names":["React","fetch","Index","props","contacts","map","id","fname","lname","getInitialProps","reponse","json","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB;AAAA,QAAGC,EAAH,QAAGA,EAAH;AAAA,QAAOC,KAAP,QAAOA,KAAP;AAAA,QAAcC,KAAd,QAAcA,KAAd;AAAA,WAClB;AAAG,MAAA,GAAG,EAAEF,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaC,KAAK,GAAG,GAAR,GAAcC,KAA3B,CADkB;AAAA,GAAnB,CAFH,CADF;AAQD;KATuBN,K;AAWxBA,KAAK,CAACO,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACAR,KAAK,CAAC,eAAD,CADL;;AAAA;AAChBS,UAAAA,OADgB;AAAA;AAAA,iBAECA,OAAO,CAACC,IAAR,EAFD;;AAAA;AAEhBP,UAAAA,QAFgB;AAGtBQ,UAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AAHsB,2CAIf;AACLA,YAAAA,QAAQ,EAARA;AADK,WAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import React from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nexport default function Index(props) {\r\n  return (\r\n    <>\r\n      <h1>Liste des contacts</h1>\r\n      {props.contacts.map(({ id, fname, lname }) => (\r\n        <p key={id}>{fname + ' ' + lname}</p>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nIndex.getInitialProps = async () => {\r\n  const reponse = await fetch('/api/contacts');\r\n  const contacts = await reponse.json();\r\n  console.log(contacts);\r\n  return {\r\n    contacts,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}